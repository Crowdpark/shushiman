package{	import flash.display.MovieClip;	import flash.display.DisplayObject;	import flash.filters.DisplacementMapFilter;	import flash.utils.getQualifiedClassName;	import flash.geom.Point;		/**	 * @author szalwinski	 */	 	public class LevelGenerator extends MovieClip	{		private var _log:String = "";		private var _number:uint = 0;		private var _fields:Array = [];		private var _prevField:Field;		private var _rowNew:Boolean = true;		private var _startX:Number = 20;		private var _startY:Number = 20;		private var _sizeX:Number = 20;		private var _sizeY:Number = 20;				public function LevelGenerator()		{			_log += '{ ';			level();			gather();			convert();			_log += "}}";			trace(_log);		}				private function level():void		{			_log += '"level":{'		}				private function gather():void		{			for (var i:uint = 0; i < _sizeY; i++)			{				for (var j:uint = 0; j < _sizeX; j++)				{					var point:Point = new Point(40*j+20,40*i+20)					var exists:Boolean = objects.getObjectsUnderPoint(point).length > 0;					if (exists)					{						var object:DisplayObject = objects.getObjectsUnderPoint(point)[0].parent;						var field:Field = new Field();						field.x = object.x;						field.y = object.y;						field.column = j;						field.row = i;						field.type = getQualifiedClassName(object);						_fields.push(field);					}				}							}		}				private function convert():void		{			_log += '"fields":[[';			_rowNew = true;						for (var i:uint = 0; i < _fields.length; i++)			{				var field:Field = _fields[i];								if (_prevField)				{					if (_prevField.x > field.x)					{												_log += '],[';						_rowNew = true;					}					else					{						_rowNew = false;					}				}				else				{					_rowNew = true;				}						if (_rowNew)				{					_log += field;				}				else				{					_log += "," + field;				}								_rowNew = false;				_prevField = field;			}						_log += "]]";		}	}}